{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initalNotes","notesToShow","filter","toggleImportanceOf","find","it","changedNote","returnedNote","map","catch","error","setTimeout","n","key","onSubmit","event","preventDefault","noteObject","length","Date","toISOString","Math","random","returnedObject","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","document","getElementById"],"mappings":"yNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCK3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCeQ,EArBA,WACX,IAAMC,EAAUC,IAAMC,IAHV,UAINC,EAAc,CAChBC,GAAI,IACJR,QAAS,mCACTS,KAAM,2BACNX,WAAW,GAEf,OAAOM,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAAAO,GAEX,OADgBT,IAAMU,KAdV,SAcwBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAN,UAnBJ,SAmBI,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,8NChB7C,IAgGeK,EAhGH,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,iBAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIqBN,mBAAS,0BAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAWnBC,qBALa,WACTC,IAAqBnB,MAAK,SAAAoB,GACtBT,EAASS,QAGD,IAEhB,IAAMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAArC,GAAI,OAAIA,EAAKG,aAExBmC,EAAqB,SAAAzB,GACvB,IAAMb,EAAOyB,EAAMc,MAAK,SAAAC,GAAE,OAAIA,EAAG3B,KAAOA,KAClC4B,E,yVAAW,IAAQzC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD+B,EAAmBrB,EAAI4B,GAClB1B,MAAK,SAAA2B,GACFhB,EAASD,EAAMkB,KAAI,SAAA3C,GAAI,OAAIA,EAAKa,KAAOA,EAAKb,EAAO0C,SAEtDE,OAAM,SAAAC,GACHb,EAAgB,SAAD,OAAUhC,EAAKK,QAAf,sCACfyC,YAAW,WACPd,EAAgB,QACjB,KACHN,EAASD,EAAMY,QAAO,SAAAU,GAAC,OAAIA,EAAElC,KAAOA,UAyChD,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcL,QAASuB,IAEvB,6BACI,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACMA,EAAU,YAAc,QAGlC,4BA/CWO,EAAYO,KAAI,SAAA3C,GAAI,OAAG,kBAAC,EAAD,CAAMgD,IAAKhD,EAAKa,GAAIb,KAAMA,EAAMC,iBAAkB,kBAAMqC,EAAmBtC,EAAKa,WAkDlH,0BAAMoC,SAhDE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACf/C,QAASsB,EACTd,GAAIY,EAAM4B,OAAS,EACnBvC,MAAM,IAAIwC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAG/BvB,EAAmBkB,GACdrC,MAAK,SAAA2C,GACFhC,EAASD,EAAMP,OAAOwC,IACtB9B,EAAW,SAqCX,2BACI+B,MAAOhC,EACPiC,SAnCS,SAACV,GACtBtB,EAAWsB,EAAMW,OAAOF,UAoChB,4BAAQG,KAAK,UAAb,SAEJ,mBAnCO,WAOX,OACI,yBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKV,6BACA,wGAyBA,Q,MC3FZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f7599f15.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note;","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes'\n\nconst App = (props) => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('a new note...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n    const hook = () => {\n        noteService.getAll().then(initalNotes => {\n            setNotes(initalNotes)\n        })\n    }\n    useEffect(hook, [])\n\n    const notesToShow = showAll ?\n        notes :\n        notes.filter(note => note.important)\n\n    const toggleImportanceOf = id => {\n        const note = notes.find(it => it.id === id);\n        const changedNote = { ...note, important: !note.important }\n\n        noteService.update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch(error => {\n                setErrorMessage(`Note '${note.content}' was already deleted from server`)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n                setNotes(notes.filter(n => n.id !== id))\n            });\n    }\n\n    const rows = () => notesToShow.map(note =><Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />)\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n            content: newNote,\n            id: notes.length + 1,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n        };\n\n        noteService.create(noteObject)\n            .then(returnedObject => {\n                setNotes(notes.concat(returnedObject));\n                setNewNote('');\n            })\n    };\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value)\n    }\n\n    const Footer = () => {\n        const footerStyle = {\n            color: 'green',\n            fontStyle: 'italic',\n            fontSize: 16\n        }\n\n        return (\n            <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? 'important' : 'all' }\n                </button>\n            </div>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input\n                    value={newNote}\n                    onChange={handleNoteChange}\n                />\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}